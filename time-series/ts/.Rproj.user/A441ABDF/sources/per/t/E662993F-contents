---
title: " Онгоцний зорчигч хөдөлгөөний Time series дата аналитик"
output: html_notebook
---

## 1. Хэрэгтэй сангууд:


```{r}
packages = c('TSA', 'tseries', 'lmtest', 'forecast')

for (p in packages){
  if (!require(p,character.only = T)){
    install.packages(p)
  }
  library(p,character.only = T)
}
p_load(tidyverse,lubridate,showtext)
showtext_auto()
font_add_google("Bebas Neue", "Bebas Neue")
```
## 2. Өгөгдөл уншиж авах:

```{r}
df <- read.csv('flight.csv')

head(df)
```

```{r}
colnames(df) <- (c("Жил","Сар","Зорчигчидын_тоо"))

tail(df,2)
```

## 3. Дүрслэх шинжилгээ

```{r}
summary(df)
```


```{r}


df_TS <- ts(as.vector(df$Зорчигчидын_тоо), start=c(1949), end=c(1960,0),frequency = 12)

class(df_TS)
df_TS
```

## 4. Цаг хугацааны цуврал загварууд


```{r}
plot(df_TS,type='o',ylab='Зорчигчидын_тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
```


```{r}
plot(df_TS,ylab='Зорчигчидын_тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
points(y=df_TS,x=time(df_TS),pch=as.vector(season(df_TS)))
```

## 5. Өмнөх сарын зорчигчдын дараагийн сарын зорчигчдод үзүүлэх нөлөө


```{r}

series_without_lag = df_TS
head(series_without_lag)
```

```{r}
first_lag_ts_series = zlag(df_TS)
# observation of lag 1 time series
head(first_lag_ts_series)
```


```{r}
index = 2:length(first_lag_ts_series)

plot(y=df_TS,x=zlag(first_lag_ts_series),ylab='Үндсэн агаарын тээврийн зорчигчид', xlab='Агаарын тээврийн эхний хоцрогдол', main= "Анхны цагийн цуврал болон түүний анхны хоцролт хоорондын хамаарал ")

```

```{r}
cor(series_without_lag[index],first_lag_ts_series[index])
```

## 5. детерминист загварууд


# 5.1. Шугаман регресс


```{r}
time_of_air_passenger_df_TS <- time(df_TS)
```

```{r}
plot(df_TS,type='o',ylab='Агаарын тээврийн зорчигчид',col="blue", main = "Агаарын тээврийн зорчигчдод зориулсан цагийн цувралын зураг ")
abline(linear_regression,col="red")
```


# 5.2. Квадрат хандлага

```{r}
# Цагийн квадрат
square_of_time_of_air_passenger_df_TSS <- time_of_air_passenger_df_TS ^ 2
# Квадрат загварыг тохируулах
quadratic_model <-lm(df_TS ~ time_of_air_passenger_df_TS + square_of_time_of_air_passenger_df_TSS)
# Загварын хураангуйг авах
summary(quadratic_model)
```


```{r}
plot(ts(fitted(quadratic_model)), ylim = c(min(c(fitted(quadratic_model), as.vector(df_TS))), max(c(fitted(quadratic_model),as.vector(df_TS)))),
     ylab='Агаарын тээврийн зорчигчид' , main = "Агаарын тээврийн зорчигчдодын квадрат муруй ", type="l",lty=2,col="red")
lines(as.vector(df_TS),type="o",col="navyblue")
```
# 5.3. Улирлын детерминист

```{r}
month.=season(df_TS)
seasonal_model =lm(df_TS ~ month. -1) 
summary(seasonal_model)
```

```{r}
# To visualise the fit
plot(ts(fitted(seasonal_model)), ylab='Агаарын тээврийн зорчигчид', 
     main = "Агаарын тээврийн зорчигч тээврийн цувралд улирлын чанартай загвар" , 
     ylim = c(min(c(fitted(seasonal_model), as.vector(df_TS))) ,
              max(c(fitted(seasonal_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
```
# 5.4. Cosine


```{r}
har. <- harmonic(df_TS, 1)
data <- data.frame(df_TS,har.)
cosine_model <- lm(df_TS ~ cos.2.pi.t. + sin.2.pi.t. , data = data) 
summary(cosine_model)
```

```{r}
plot(ts(fitted(cosine_model)), ylab='Агаарын тээврийн зорчигчид', main = "Косинус ашиглcан агаарын тээврийн зорчигчдод зориулсан улирлын загвар " , ylim = c(min(c(fitted(cosine_model), as.vector(df_TS))) ,max(c(fitted(cosine_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
```


## 6. Стохастик цагийн цуврал


# 6.1. Хугацааны цувааны схем
```{r}

plot(df_TS,type='o',ylab='Зорчигчдын тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
points(y=df_TS,x=time(df_TS),pch=as.vector(season(df.kernel()))
```

# 6.2. Autocorrelation Function (ACF) болон Partial Autocorrelation Function (PACF)

```{r}
plot_acf_and_pacf <- function(df_TS, lags_given,df_name) {
  assign("x",df_TS)
  par(mfrow=c(1,2))
  acf(df_TS, lag.max=lags_given,main=paste("ACF Plot of", df_name))
  pacf(df_TS, lag.max=lags_given, main=paste("PACF Plot of", df_name))
  
}

plot_acf_and_pacf(df_TS, 64,"зорчигчид")
```


# 6.3 Улирлын авторегрессийн нэгдсэн хөдөлгөөнт дундаж (SARIMA) загвар

SARIMA (p,d,q) ×
 (P,D,Q)s

p : Auto Regressive (AR) Order,
d : The number of ordinary differences,
q : Moving Average (MA)
P : Seasonal AR order D 
Q: Seasonal MA order s

```{r}

#                                                  p,d,q                        P,D,Q
model1_airline = arima(df_TS,order=c(0,0,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model1 = residuals(model1_airline);  
par(mfrow=c(1,1))
plot(res_of_model1,xlab='хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")

```



```{r}
plot_acf_and_pacf(res_of_model1, 48,"M1-ийн үлдэгдэл")
```


```{r}
#                                                       p,d,q                        P,D,Q
model2_airline = arima(log(df_TS),order=c(0,0,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model2 = residuals(model2_airline);  
par(mfrow=c(1,1))
plot(res_of_model2,xlab='Цаг хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
```

```{r}
plot_acf_and_pacf(res_of_model2, 48,"M2-ийн үлдэгдэл")
```

```{r}

#                                                       p,d,q                        P,D,Q
model3_airline = arima(log(df_TS),order=c(0,1,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model3 = residuals(model3_airline);  
par(mfrow=c(1,1))
plot(res_of_model3,xlab='Цаг хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
```

```{r}
plot_acf_and_pacf(res_of_model3, 36,"M3-ийн үлдэгдэл")

```


```{r}
#                                                       p,d,q                        P,D,Q
model4_airline = arima(log(df_TS),order=c(3,1,2),seasonal=list(order=c(0,1,0), period=12), method="ML")
res_of_model4 = residuals(model4_airline);  
par(mfrow=c(1,1))
plot(res_of_model4,xlab='Цаг хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
```

```{r}
plot_acf_and_pacf(res_of_model4, 36,"M4-ийн үлдэгдэл")

```

# 6.4. Өргөтгөсөн автокорреляцийн функц (EACF)

```{r}
eacf(res_of_model3)
```
# 6.5. Байесын мэдээллийн шалгуур (BIC)

```{r}
res = armasubsets(y=res_of_model3,nar=6,nma=6,y.name='test',ar.method='ols')
plot(res)
```

## 7. Forecasting

```{r}
m5_015.landingA = Arima(df_TS,order=c(1,1,0),seasonal=list(order=c(0,1,0), period=12),
                       method = "CSS")
preds1 = forecast(m5_015.landingA, h = 24)
plot(preds1,
     main = " Цаг хугацааны цувралын дараагийн 24 сарын урьдчилсан мэдээ",
     xlab = "Жил",
     ylab = "Зорчигчдын тоо")
```

