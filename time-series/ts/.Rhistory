packages = c('TSA', 'tseries', 'lmtest', 'FitAR', 'forecast')
for (p in packages){
if (!require(p,character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
df <- read_csv('/flight.csv')
df <- read_csv('flight.csv')
df <- read_csv('flight.csv')
df <- read.csv('flight.csv')
head(df)
packages = c('TSA', 'tseries', 'lmtest', 'FitAR', 'forecast')
for (p in packages){
if (!require(p,character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
packages = c('TSA', 'tseries', 'lmtest', 'FitAR', 'forecast')
for (p in packages){
if (!require(p,character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
packages = c('TSA', 'tseries', 'lmtest', 'forecast')
for (p in packages){
if (!require(p,character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
p_load(tidyverse,lubridate,showtext)
# Rename the columns
colnames(air_passenger_df) <- (c("Month","Number_of_Passengers"))
# Rename the columns
colnames(df) <- (c("Month","Number_of_Passengers"))
# To get the details of last 2 observations
tail(air_passenger_df,2)
# Rename the columns
colnames(df) <- (c("Month","Number_of_Passengers"))
# To get the details of last 2 observations
tail(df,2)
# Rename the columns
colnames(df) <- (c("Year","Month","Number_of_Passengers"))
# To get the details of last 2 observations
tail(df,2)
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949,1), end=c(1960,1),frequency = 12)
# Checking the class of the object
class(df_TS)
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949,1), end=c(1960,1),frequency = 12)
# Checking the class of the object
class(df_TS)
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1960),frequency = 12)
# Checking the class of the object
class(df_TS)
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1960),frequency = 12)
# Checking the class of the object
class(df_TS)
df_TS
plot(df_TS,type='o',ylab='Number of Passengers',main='Time series plot of Airline Passengers')
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1961),frequency = 12)
# Checking the class of the object
class(df_TS)
df_TS
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1961,0),frequency = 12)
# Checking the class of the object
class(df_TS)
df_TS
plot(df_TS,type='o',ylab='Number of Passengers',main='Time series plot of Airline Passengers')
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1960,0),frequency = 12)
# Checking the class of the object
class(df_TS)
df_TS
plot(df_TS,type='o',ylab='Number of Passengers',main='Time series plot of Airline Passengers')
# To convert into a Time series object, since it is a monthly data frequency is set to 12.
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1960,0),frequency = 12)
# Checking the class of the object
class(df_TS)
df_TS
plot(df_TS,type='o',ylab='Number of Passengers',main='Time series plot of Airline Passengers')
plot(df_TS,ylab='Number of Passengers',main='Time series plot of Airline Passengers')
points(y=df_TS,x=time(df_TS),pch=as.vector(season(df_TS)))
series_without_lag = df_TS
head(series_without_lag)
first_lag_ts_series = zlag(df_TS)
# To display first 5 observation of lag 1 time series
head(first_lag_ts_series)
index = 2:length(first_lag_ts_series)
index = 2:length(first_lag_ts_series)
plot(y=air_passenger_df_TS,x=zlag(first_lag_ts_series),ylab='Original Airline Passengers', xlab='first lag Airline Passengers', main= "Relation between Orginal Time Series and it's first lag ")
index = 2:length(first_lag_ts_series)
plot(y=df_TS,x=zlag(first_lag_ts_series),ylab='Original Airline Passengers', xlab='first lag Airline Passengers', main= "Relation between Orginal Time Series and it's first lag ")
cor(series_without_lag[index],first_lag_ts_series[index])
time_of_air_passenger_df_TS <- time(df_TS)
linear_regression <-lm(df_TS ~ time_of_air_passenger_df_TS)
# To get the output of the model
summary(linear_regression)
time_of_air_passenger_df_TS <- time(df_TS)
linear_regression <-lm(df_TS ~ time_of_air_passenger_df_TS)
# To get the output of the model
summary(linear_regression)
cor(series_without_lag[index],first_lag_ts_series[index])
time_of_air_passenger_df_TS <- time(df_TS)
linear_regression <-lm(df_TS ~ time_of_air_passenger_df_TS)
# To get the output of the model
summary(linear_regression)
time_of_air_passenger_df_TS <- time(df_TS)
linear_regression <- lm(df_TS ~ time_of_air_passenger_df_TS)
# To get the output of the model
summary(linear_regression)
time_of_air_passenger_df_TS <- time(df_TS)
plot(df_TS,type='o',ylab='AirLine Passengers',col="blue", main = "Time series plot for Airline Passengers ")
abline(linear_regression,col="red")
# To find the square of the time
square_of_time_of_air_passenger_df_TSS <- time_of_air_passenger_df_TS ^ 2
#Fitting the quadratic model
quadratic_model <-lm(df_TS ~ time_of_air_passenger_df_TS + square_of_time_of_air_passenger_df_TSS)
# To get the summary of the model
summary(quadratic_model)
# Visualising the plot
plot(ts(fitted(quadratic_model)), ylim = c(min(c(fitted(quadratic_model), as.vector(air_passenger_df_TS))), max(c(fitted(quadratic_model),as.vector(air_passenger_df_TS)))),
ylab='AirLine Passengers' , main = "Fitted quadratic curve to Airline Passengers", type="l",lty=2,col="red")
# Visualising the plot
plot(ts(fitted(quadratic_model)), ylim = c(min(c(fitted(quadratic_model), as.vector(df_TS))), max(c(fitted(quadratic_model),as.vector(air_passenger_df_TS)))),
ylab='AirLine Passengers' , main = "Fitted quadratic curve to Airline Passengers", type="l",lty=2,col="red")
# Visualising the plot
plot(ts(fitted(quadratic_model)), ylim = c(min(c(fitted(quadratic_model), as.vector(df_TS))), max(c(fitted(quadratic_model),as.vector(df_TS)))),
ylab='AirLine Passengers' , main = "Fitted quadratic curve to Airline Passengers", type="l",lty=2,col="red")
lines(as.vector(df_TS),type="o",col="navyblue")
# Visualising the plot
plot(ts(fitted(quadratic_model)), ylim = c(min(c(fitted(quadratic_model), as.vector(df_TS))), max(c(fitted(quadratic_model),as.vector(df_TS)))),
ylab='AirLine Passengers' , main = "Fitted quadratic curve to Airline Passengers", type="l",lty=2,col="red")
lines(as.vector(df_TS),type="o",col="navyblue")
month.=season(df_TS)
seasonal_model =lm(df_TS ~ month. -1) # -1 removes the intercept term
summary(seasonal_model)
plot(ts(fitted(cosine_model)), ylab='AirLine Passengers', main = "Fitted seasonal model for Airline Passeneger using cosine " , ylim = c(min(c(fitted(cosine_model), as.vector(df_TS))) ,max(c(fitted(cosine_model), as.vector(df_TS))) ),col="red")
# To visualise the fit
plot(ts(fitted(seasonal_model)), ylab='AirLine Passengers',
main = "Fitted seasonal model to Airline Passengers series" ,
ylim = c(min(c(fitted(seasonal_model), as.vector(df_TS))) ,
max(c(fitted(seasonal_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
plot(ts(fitted(cosine_model)), ylab='AirLine Passengers', main = "Fitted seasonal model for Airline Passeneger using cosine " , ylim = c(min(c(fitted(cosine_model), as.vector(df_TS))) ,max(c(fitted(cosine_model), as.vector(df_TS))) ),col="red")
har. <- harmonic(df_TS, 1)
data <- data.frame(df_TS,har.)
cosine_model <- lm(df_TS ~ cos.2.pi.t. + sin.2.pi.t. , data = data)
summary(cosine_model)
plot(ts(fitted(cosine_model)), ylab='AirLine Passengers', main = "Fitted seasonal model for Airline Passeneger using cosine " , ylim = c(min(c(fitted(cosine_model), as.vector(df_TS))) ,max(c(fitted(cosine_model), as.vector(df_TS))) ),col="red")
lines(as.vector(air_passenger_df_TS),type="o")
plot(ts(fitted(cosine_model)), ylab='AirLine Passengers', main = "Fitted seasonal model for Airline Passeneger using cosine " , ylim = c(min(c(fitted(cosine_model), as.vector(df_TS))) ,max(c(fitted(cosine_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
colnames(df) <- (c("Жил","Сар","Зорчигчидын тоо"))
tail(df,2)
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1960,0),frequency = 12)
df_TS <- ts(as.vector(df$Зорчигчидын_тоо), start=c(1949), end=c(1960,0),frequency = 12)
df_TS <- ts(as.vector(df$Number_of_Passengers), start=c(1949), end=c(1960,0),frequency = 12)
colnames(df) <- (c("Жил","Сар","Зорчигчидын_тоо"))
tail(df,2)
df_TS <- ts(as.vector(df$Зорчигчидын_тоо), start=c(1949), end=c(1960,0),frequency = 12)
class(df_TS)
df_TS
plot(df_TS,type='o',ylab='Зорчигчидын_тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
plot(df_TS,ylab='Зорчигчидын_тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
points(y=df_TS,x=time(df_TS),pch=as.vector(season(df_TS)))
series_without_lag = df_TS
head(series_without_lag)
first_lag_ts_series = zlag(df_TS)
# To display first 5 observation of lag 1 time series
head(first_lag_ts_series)
plot(df_TS,ylab='Зорчигчидын_тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
points(y=df_TS,x=time(df_TS),pch=as.vector(season(df_TS)))
series_without_lag = df_TS
head(series_without_lag)
first_lag_ts_series = zlag(df_TS)
# observation of lag 1 time series
head(first_lag_ts_series)
index = 2:length(first_lag_ts_series)
plot(y=df_TS,x=zlag(first_lag_ts_series),ylab='Үндсэн агаарын тээврийн зорчигчид', xlab='Агаарын тээврийн эхний хоцрогдол', main= "Анхны цагийн цуврал болон түүний анхны хоцролт хоорондын хамаарал ")
cor(series_without_lag[index],first_lag_ts_series[index])
cor(series_without_lag[index],first_lag_ts_series[index])
plot(df_TS,type='o',ylab='Агаарын тээврийн зорчигчид',col="blue", main = "Агаарын тээврийн зорчигчдод зориулсан цагийн цувралын зураг ")
abline(linear_regression,col="red")
# Цагийн квадрат
square_of_time_of_air_passenger_df_TSS <- time_of_air_passenger_df_TS ^ 2
# Квадрат загварыг тохируулах
quadratic_model <-lm(df_TS ~ time_of_air_passenger_df_TS + square_of_time_of_air_passenger_df_TSS)
# Загварын хураангуйг авах
summary(quadratic_model)
plot(ts(fitted(quadratic_model)), ylim = c(min(c(fitted(quadratic_model), as.vector(df_TS))), max(c(fitted(quadratic_model),as.vector(df_TS)))),
ylab='Агаарын тээврийн зорчигчид' , main = "Агаарын тээврийн зорчигчдодын квадрат муруй ", type="l",lty=2,col="red")
lines(as.vector(df_TS),type="o",col="navyblue")
month.=season(df_TS)
seasonal_model =lm(df_TS ~ month. -1)
summary(seasonal_model)
# To visualise the fit
plot(ts(fitted(seasonal_model)), ylab='Агаарын тээврийн зорчигчид',
main = "Агаарын тээврийн зорчигч тээврийн цувралд улирлын чанартай загвар" ,
ylim = c(min(c(fitted(seasonal_model), as.vector(df_TS))) ,
max(c(fitted(seasonal_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
plot(ts(fitted(cosine_model)), ylab='Агаарын тээврийн зорчигчид', main = "Косинус ашиглcан агаарын тээврийн зорчигчдод зориулсан улирлын загвар " , ylim = c(min(c(fitted(cosine_model), as.vector(df_TS))) ,max(c(fitted(cosine_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
summary(df)
df_TS <- ts(as.vector(df$Зорчигчидын_тоо), start=c(1949), end=c(1960,0),frequency = 12)
class(df_TS)
df_TS
plot(df_TS,type='o',ylab='Зорчигчидын_тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
plot(df_TS,ylab='Зорчигчидын_тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
points(y=df_TS,x=time(df_TS),pch=as.vector(season(df_TS)))
series_without_lag = df_TS
head(series_without_lag)
series_without_lag = df_TS
head(series_without_lag)
first_lag_ts_series = zlag(df_TS)
# observation of lag 1 time series
head(first_lag_ts_series)
first_lag_ts_series = zlag(df_TS)
# observation of lag 1 time series
head(first_lag_ts_series)
index = 2:length(first_lag_ts_series)
plot(y=df_TS,x=zlag(first_lag_ts_series),ylab='Үндсэн агаарын тээврийн зорчигчид', xlab='Агаарын тээврийн эхний хоцрогдол', main= "Анхны цагийн цуврал болон түүний анхны хоцролт хоорондын хамаарал ")
cor(series_without_lag[index],first_lag_ts_series[index])
time_of_air_passenger_df_TS <- time(df_TS)
plot(df_TS,type='o',ylab='Агаарын тээврийн зорчигчид',col="blue", main = "Агаарын тээврийн зорчигчдод зориулсан цагийн цувралын зураг ")
abline(linear_regression,col="red")
time_of_air_passenger_df_TS <- time(df_TS)
plot(df_TS,type='o',ylab='Агаарын тээврийн зорчигчид',col="blue", main = "Агаарын тээврийн зорчигчдод зориулсан цагийн цувралын зураг ")
abline(linear_regression,col="red")
# Цагийн квадрат
square_of_time_of_air_passenger_df_TSS <- time_of_air_passenger_df_TS ^ 2
# Квадрат загварыг тохируулах
quadratic_model <-lm(df_TS ~ time_of_air_passenger_df_TS + square_of_time_of_air_passenger_df_TSS)
# Загварын хураангуйг авах
summary(quadratic_model)
plot(ts(fitted(quadratic_model)), ylim = c(min(c(fitted(quadratic_model), as.vector(df_TS))), max(c(fitted(quadratic_model),as.vector(df_TS)))),
ylab='Агаарын тээврийн зорчигчид' , main = "Агаарын тээврийн зорчигчдодын квадрат муруй ", type="l",lty=2,col="red")
lines(as.vector(df_TS),type="o",col="navyblue")
month.=season(df_TS)
seasonal_model =lm(df_TS ~ month. -1)
summary(seasonal_model)
# To visualise the fit
plot(ts(fitted(seasonal_model)), ylab='Агаарын тээврийн зорчигчид',
main = "Агаарын тээврийн зорчигч тээврийн цувралд улирлын чанартай загвар" ,
ylim = c(min(c(fitted(seasonal_model), as.vector(df_TS))) ,
max(c(fitted(seasonal_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
har. <- harmonic(df_TS, 1)
data <- data.frame(df_TS,har.)
cosine_model <- lm(df_TS ~ cos.2.pi.t. + sin.2.pi.t. , data = data)
summary(cosine_model)
plot(ts(fitted(cosine_model)), ylab='Агаарын тээврийн зорчигчид', main = "Косинус ашиглcан агаарын тээврийн зорчигчдод зориулсан улирлын загвар " , ylim = c(min(c(fitted(cosine_model), as.vector(df_TS))) ,max(c(fitted(cosine_model), as.vector(df_TS))) ),col="red")
lines(as.vector(df_TS),type="o")
plot(air_passenger_df_TS,type='o',ylab='Зорчигчдын тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
plot(df_TS,type='o',ylab='Зорчигчдын тоо',main='Агаарын тээврийн зорчигчдын цаг хугацааны цуврал зураг')
points(y=df_TS,x=time(df_TS),pch=as.vector(season(df.kernel()))
plot_acf_and_pacf <- function(df_TS, lags_given,df_name) {
assign("x",df_TS)
par(mfrow=c(1,2))
acf(df_TS, lag.max=lags_given,main=paste("ACF Plot of", df_name))
pacf(df_TS, lag.max=lags_given, main=paste("PACF Plot of", df_name))
}
plot_acf_and_pacf <- function(df_TS, lags_given,df_name) {
assign("x",df_TS)
par(mfrow=c(1,2))
acf(df_TS, lag.max=lags_given,main=paste("ACF Plot of", df_name))
pacf(df_TS, lag.max=lags_given, main=paste("PACF Plot of", df_name))
}
plot_acf_and_pacf(df_TS, 64,"Air Passengers")
plot_acf_and_pacf <- function(df_TS, lags_given,df_name) {
assign("x",df_TS)
par(mfrow=c(1,2))
acf(df_TS, lag.max=lags_given,main=paste("ACF Plot of", df_name))
pacf(df_TS, lag.max=lags_given, main=paste("PACF Plot of", df_name))
}
plot_acf_and_pacf(df_TS, 64,"Агаарын тээврийн зорчигчид")
plot_acf_and_pacf <- function(df_TS, lags_given,df_name) {
assign("x",df_TS)
par(mfrow=c(1,2))
acf(df_TS, lag.max=lags_given,main=paste("ACF Plot of", df_name))
pacf(df_TS, lag.max=lags_given, main=paste("PACF Plot of", df_name))
}
plot_acf_and_pacf(df_TS, 64,"зорчигчид")
#                                                  p,d,q                        P,D,Q
model1_airline = arima(air_passenger_df_TS,order=c(0,0,0),seasonal=list(order=c(0,1,0), period=12))
#                                                  p,d,q                        P,D,Q
model1_airline = arima(df_TS,order=c(0,0,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model1 = residuals(model1_airline);
par(mfrow=c(1,1))
plot(res_of_model1,xlab='Time',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
plot_acf_and_pacf(res_of_model1, 48,"M1-ийн үлдэгдэл")
#                                                  p,d,q                        P,D,Q
model1_airline = arima(df_TS,order=c(0,0,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model1 = residuals(model1_airline);
par(mfrow=c(1,1))
plot(res_of_model1,xlab='хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
#                                                       p,d,q                        P,D,Q
model3_airline = arima(log(air_passenger_df_TS),order=c(0,1,0),seasonal=list(order=c(0,1,0), period=12))
#                                                       p,d,q                        P,D,Q
model3_airline = arima(log(df_TS),order=c(0,1,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model3 = residuals(model3_airline);
par(mfrow=c(1,1))
plot(res_of_model3,xlab='Цаг хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
#                                                       p,d,q                        P,D,Q
model2_airline = arima(log(df_TS),order=c(0,0,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model2 = residuals(model2_airline);
par(mfrow=c(1,1))
plot(res_of_model2,xlab='Цаг хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
plot_acf_and_pacf(res_of_model2, 48,"M2-ийн үлдэгдэл")
#                                                       p,d,q                        P,D,Q
model3_airline = arima(log(df_TS),order=c(0,1,0),seasonal=list(order=c(0,1,0), period=12))
res_of_model3 = residuals(model3_airline);
par(mfrow=c(1,1))
plot(res_of_model3,xlab='Цаг хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
plot_acf_and_pacf(res_of_model4, 36,"M3-ийн үлдэгдэл")
plot_acf_and_pacf(res_of_model3, 36,"M3-ийн үлдэгдэл")
#                                                       p,d,q                        P,D,Q
model4_airline = arima(log(df_TS),order=c(3,1,2),seasonal=list(order=c(0,1,0), period=12), method="ML")
res_of_model4 = residuals(model4_airline);
par(mfrow=c(1,1))
plot(res_of_model4,xlab='Цаг хугацаа',ylab='Үлдэгдэл',main="Үлдэгдэлийн цагийн цувааны график")
plot_acf_and_pacf(res_of_model4, 36,"M4-ийн үлдэгдэл")
eacf(res_of_model3)
res = armasubsets(y=res_of_model3,nar=6,nma=6,y.name='test',ar.method='ols')
plot(res)
# Forecasting
m5_015.landingA = Arima(air_passenger_df_TS,order=c(1,1,0),seasonal=list(order=c(0,1,0), period=12),
method = "CSS")
# Forecasting
m5_015.landingA = Arima(df_TS,order=c(1,1,0),seasonal=list(order=c(0,1,0), period=12),
method = "CSS")
preds1 = forecast(m5_015.landingA, h = 24)
plot(preds1,
main = " Forecast for the next 24 months of the time series",
xlab = "Year",
ylab = "Number of Passengers")
m5_015.landingA = Arima(df_TS,order=c(1,1,0),seasonal=list(order=c(0,1,0), period=12),
method = "CSS")
preds1 = forecast(m5_015.landingA, h = 24)
plot(preds1,
main = " Цаг хугацааны цувралын дараагийн 24 сарын урьдчилсан мэдээ",
xlab = "Жил",
ylab = "Зорчигчдын тоо")
